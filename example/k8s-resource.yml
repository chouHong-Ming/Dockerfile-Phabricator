apiVersion: v1
kind: PersistentVolume
metadata:
  name: phabricator
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 200Gi
  nfs:
    path: [YOUR_NFS_PATH]
    server: [YOUR_NFS_ADDRESS]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: phabricator
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: phabricator

---
apiVersion: v1
data:
  MYSQL_HOST: [YOUR_DB_ADDRESS]
  MYSQL_USER: [YOUR_DB_USER]
  MYSQL_PASS: [YOUR_DB_PASSWORD]
  MAILERS_USER: [YOUR_EMAIL_USER]
  MAILERS_PASS: [YOUR_EMAIL_PASSWORD]
kind: Secret
metadata:
  name: phabricator
  namespace: [YOUR_K8S_NAMESPACE]
type: Opaque

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: phabricator
  name: phabricator
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: phabricator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: phabricator
    spec:
      containers:
      - env:
        - name: HOST_NAME
          value: test.local
        - name: HTTPS_ENABLE
          value: "true"
        - name: UPSTREAM
          value: "127.0.0.1"
        - name: TRUST_LAYER
          value: "0"
        - name: TIMEZONE
          value: "UTC"
        - name: MAILERS_KEY
          value: "SMTP"
        - name: MAILERS_HOST
          value: "smtp.gmail.com"
        - name: MAILERS_PORT
          value: "465"
        - name: MAILERS_PROT
          value: "SSL"
        - name: MAILERS_USER
          valueFrom:
            secretKeyRef:
              key: MAILERS_USER
              name: phabricator
        - name: MAILERS_PASS
          valueFrom:
            secretKeyRef:
              key: MAILERS_PASS
              name: phabricator
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              key: MYSQL_HOST
              name: phabricator
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: phabricator
        - name: MYSQL_PASS
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASS
              name: phabricator
        image: chouhongming/phabricator:latest
        imagePullPolicy: Always
        name: phabricator
        ports:
        - containerPort: 3000
          name: phabricator
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/repo
          name: phabricator
          subPath: Repo
        - mountPath: /var/www/html/phabricator/webroot/upload
          name: phabricator
          subPath: Upload
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: phabricator
        persistentVolumeClaim:
          claimName: phabricator

---
apiVersion: v1
kind: Service
metadata:
  name: phabricator
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  ports:
  - name: phabricator
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: phabricator
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: phab-web
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`test.local`)
    middlewares:
    - name: [YOUR_HTTPS_REDIRECT_MIDDLEWARE]
    services:
    - name: phabricator
      port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: phab-websecure
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`test.local`)
    services:
    - name: phabricator
      port: 80
  tls:
    certResolver: [YOUR_RESOLVER_NAME]
    options: {}

